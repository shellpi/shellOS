#ifndef __SHELLOS_KERNEL_SETTINGS_H__
#define __SHELLOS_KERNEL_SETTINGS_H__

/* raspberry pi board, by default is 4 */
#define RASPI 4


// DO NOT EDIT BELOW THIS LINE!!
#if RASPI >= 3
 #define AARCH64
#else
 #define AARCH32
#endif

enum __RASPI_MEMORY_DIRECTIONS__ {
// MMIO
switch (RASPI) {
case 2:
case 3:  MMIO_BASE = 0x3F000000; break;
case 4:  MMIO_BASE = 0xFE000000; break;
default: MMIO_BASE = 0x20000000; break;
}

// GPIO
GPIO_BASE = (MMIO_BASE + 0x200000),
GPPUD = (GPIO_BASE + 0x94),
GPPUDCLK0 = (GPIO_BASE + 0x98),

// UART
UART0_BASE = (GPIO_BASE + 0x1000),
UART0_DR = (UART0_BASE + 0x00),
UART0_RSRECR = (UART0_BASE + 0x04),
UART0_FR = (UART0_BASE + 0x18),
UART0_ILPR = (UART0_BASE + 0x20),
UART0_IBRD = (UART0_BASE + 0x24),
UART0_FBRD = (UART0_BASE + 0x28),
UART0_LCRH = (UART0_BASE + 0x2C),
UART0_CR = (UART0_BASE + 0x30),
UART0_IFLS = (UART0_BASE + 0x34),
UART0_IMSC = (UART0_BASE + 0x38),
UART0_RIS = (UART0_BASE + 0x3C),
UART0_MIS = (UART0_BASE + 0x40),
UART0_ICR = (UART0_BASE + 0x44),
UART0_DMACR = (UART0_BASE + 0x48),
UART0_ITCR = (UART0_BASE + 0x80),
UART0_ITIP = (UART0_BASE + 0x84),
UART0_ITOP = (UART0_BASE + 0x88),
UART0_TDR = (UART0_BASE + 0x8C),

// Mailbox registers
MBOX_BASE = (MMIO_BASE + 0xB880),
MBOX_READ = (MBOX_BASE + 0x00),
MBOX_STATUS = (MBOX_BASE + 0x18),
MBOX_WRITE = (MBOX_BASE + 0x20)
};


#endif // ! __SHELLOS_KERNEL_SETTINGS_H__